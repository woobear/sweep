/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ML   3

&lt { quick_tap_ms = <200>; };
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};


/ { 

behaviors {
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    td1: tap_dance_1 {
            compatible  = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp SEMI>;
        };
    td0: tap_dance_0 {
            compatible  = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RA(TAB)>, <&kp RC(RA(TAB))>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_brace_left {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LEFT_BRACE>;
        };
        combo_brace_right {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RIGHT_BRACE>;
        };
        combo_bracket_left {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_bracket_right {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp RIGHT_BRACKET>;
        };
        combo_par_left {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };
        combo_par_right {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
    };
conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
        if-layers = <1 2>;
        then-layer = <3>;
    };
};
keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
    &kp Q         &kp W       &kp F        &kp P      &kp B      &kp J      &kp L      &kp U       &kp Y       &td1           
    &hm LCTRL A   &hm LSHFT R &hm LALT S   &hm LGUI T &kp G      &kp M      &hm RGUI N &hm RALT E  &hm RSHFT I &kp O           
    &kp Z         &kp X       &kp C        &kp D      &kp V      &kp K      &kp H      &kp COMMA   &kp DOT     &hm RCTRL FSLH 
                                                      &lt 1 TAB  &kp SPACE  &kp RET    &lt 2 BKSP 
            >;
        };

        lower_layer {
            bindings = <
    &kp N1     &kp N2          &kp N3  	          &kp N4             &kp N5                &kp N6     &kp N7     &kp N8     &kp N9       &kp N0     
    &kp GRAVE  &trans          &kp LEFT_BRACKET   &kp LEFT_BRACE     &kp LEFT_PARENTHESIS  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT    &kp UNDER  
    &trans     &trans          &kp RIGHT_BRACKET  &kp RIGHT_BRACE    &kp RIGHT_PARENTHESIS &td0       &kp MINUS  &kp EQUAL  &trans       &kp BSLH   
                                                      &trans          &trans                &kp ESC    &trans     
            >;
        };

        raise_layer {
            bindings = <
    &kp F2  &kp F3     &kp F4       &kp F5         &kp F6        &kp F7     &kp F8    &kp F9    &kp F10  &kp F11  
    &trans  &kp PSCRN  &kp DEL      &trans         &trans        &kp HOME   &kp PG_DN &kp PG_UP &kp END  &kp F12  
    &trans  &trans     &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_UP  &trans     &trans    &trans    &trans   &trans   
                                    &trans           &caps_word        &trans     &trans    
            >;
        };

        misc_layer {
            bindings = <
    &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2  &trans   &trans      &trans  &trans  &trans  &trans   &trans
    &bt BT_CLR    &trans       &trans        &trans   &trans      &trans  &trans  &trans  &trans   &trans
    &trans        &trans       &trans        &trans   &trans      &trans  &trans  &trans  &trans   &trans
                                             &trans   &trans      &trans  &trans  
            >;
        };
    };
};

     
